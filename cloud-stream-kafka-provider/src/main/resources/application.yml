server:
  port: 7071
spring:
  application:
    name: cloud-stream-provider
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.0.103:8848 #配置Nacos地址
    stream:
      bindings: # 服务的整合处理
        output: # 这个名字是一个通道的名称
          destination: studyTopic # 表示要使用的Topic名称定义
          content-type: application/json # 设置消息类型，本次为json，文本则设置“text/plain”
      kafka:
        binder:
          brokers: 192.168.0.103:9092,192.168.0.103:9093,192.168.0.103:9094
          producer-properties:
            batch-size: 16384
            buffer-memory: 33554432
#  kafka:
#    bootstrap-servers: 192.168.0.103:9092,192.168.0.103:9093,192.168.0.103:9094
#    producer: # 生产者
#      retries: 3 # 设置大于 0 的值，则客户端会将发送失败的记录重新发送
#      batch-size: 16384
#      buffer-memory: 33554432
#      acks: 1
#    consumer:
#      group-id: default-group
#      enable-auto-commit: false
#      auto-offset-reset: earliest
#      max-poll-records: 500
#    listener:
#      ack-mode: MANUAL_IMMEDIATE
logging:
  file:
    name: log/cloud-stream-provider.log
  pattern:
    file: '%d{yyyy-MM-dd HH:mm:ss} : [%thread] : %-5level : %logger{50} : %msg%n'

# spring-boot-starter-actuator配置
management:
  endpoints:
    enabled-by-default: true #暴露所有端点信息
    web:
      exposure:
        include: '*'  #以web方式暴露




